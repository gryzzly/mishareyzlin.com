{
  "menu": [
    {
      "path": "/notes/",
      "title": "Notes",
      "uuid": "2162a607-bfa5-41b5-ab01-5ebae53bfd51",
      "sortIndex": 0
    },
    {
      "path": "Home",
      "title": "/",
      "uuid": "2af25248-14e9-470c-9896-5874eb920508",
      "sortIndex": 1
    },
    {
      "path": "/works",
      "title": "Works",
      "uuid": "e0fc47ef-ae76-40ed-8277-236355f21d03",
      "sortIndex": 2
    },
    {
      "path": "/cv",
      "title": "CV",
      "uuid": "d600ed36-897c-4d92-b3a3-dbd94aaca139",
      "sortIndex": 3
    }
  ],
  "pages": [
    {
      "path": "/",
      "title": "Hello",
      "content": "<p>My name is Misha Reyzlin &amp; I am a professional web developer. You may want to take a look at my <a href=\"/cv\">resume</a>. I use this website to keep my technical notes and to play with all kinds of things.</p><p>Me elsewhere: <a href=\"https://mastodon.social/@gryzzly\" rel=\"me\">mastodon</a>, <a href=\"https://github.com/gryzzly\">github</a>, <a href=\"https://stackoverflow.com/users/236135/misha-reyzlin\">stackoverflow</a>, <a href=\"http://www.linkedin.com/in/mishareyzlin\">linkedin</a></p>",
      "uuid": "c40fdfef-6315-4f05-9f5c-fe9984dcb634",
      "sortIndex": 0
    },
    {
      "path": "/notes/new-website-2022",
      "title": "Thanks Heroku for sunsetting the Free Tier",
      "uuid": "8b2f73f1-ea57-4a71-88d3-1d6a3ee9615b",
      "content": "<div>Finally, a new website. Heroku closed its free tier and with that I finally had a good enough reason to change hosting and stop using ruby.&nbsp;</div><div><br></div><div>Now this is a pre-rendered static site, but I still can enjoy a web editing experience, without having to manually edit text files, creating and pushing commits â€“ I have realised an idea I had for a long time: content is stored in github in text files, admin allows to edit the content and all this with just 30 lines of nodejs server code to enable oath authorisation via proxy.&nbsp;</div><div><br></div><div>Once the Gitbub oauth flow is done, admin user is able to pull the contents and push changes with a UI based on a content model and forms matching the fields in the models.</div>"
    }
  ]
}
